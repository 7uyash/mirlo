generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            Int         @id @default(autoincrement())
  email         String      @unique
  name          String?
  password      String      @default("")
  refresh       String? 
  artists       Artist[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt @default(now())
  isAdmin       Boolean     @default(false)
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  title     String
  content   String?
  published Boolean  @default(false)
  viewCount Int      @default(0)
  author    Artist?  @relation(fields: [authorId], references: [id])
  authorId  Int?
}

model Artist {
  id          Int         @default(autoincrement()) @id
  name        String
  bio         String?
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  posts       Post[]
  trackgroups TrackGroup[]
  enabled     Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt @default(now())
}

model TrackGroup {
  id             Int        @default(autoincrement()) @id
  about          String?
  artist         Artist     @relation(fields: [artistId], references: [id])
  artistId       Int        @unique
  title          String?
  tracks         Track[]
  cover          Image?
  published      Boolean    @default(false)
  type           String?  
  releaseDate    DateTime   @default(now())
  enabled        Boolean    @default(false)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Track {
  id             Int         @default(autoincrement()) @id
  trackGroup     TrackGroup @relation(fields: [trackGroupId], references: [id])
  trackGroupId   Int         @unique
  title          String?
  audio          Audio?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model Image {
  id            Int         @default(autoincrement()) @id
  url           String?
  trackGroup    TrackGroup  @relation(fields: [trackGroupId], references: [id])
  trackGroupId  Int         @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Audio {
  id            Int         @default(autoincrement()) @id
  url           String?
  track         Track       @relation(fields: [trackId], references: [id])
  trackId       Int         @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}